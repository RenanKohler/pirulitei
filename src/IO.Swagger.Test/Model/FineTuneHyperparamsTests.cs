/* 
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FineTuneHyperparams
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class FineTuneHyperparamsTests
    {
        // TODO uncomment below to declare an instance variable for FineTuneHyperparams
        //private FineTuneHyperparams instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of FineTuneHyperparams
            //instance = new FineTuneHyperparams();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FineTuneHyperparams
        /// </summary>
        [Test]
        public void FineTuneHyperparamsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" FineTuneHyperparams
            //Assert.IsInstanceOfType<FineTuneHyperparams> (instance, "variable 'instance' is a FineTuneHyperparams");
        }


        /// <summary>
        /// Test the property 'BatchSize'
        /// </summary>
        [Test]
        public void BatchSizeTest()
        {
            // TODO unit test for the property 'BatchSize'
        }
        /// <summary>
        /// Test the property 'ClassificationNClasses'
        /// </summary>
        [Test]
        public void ClassificationNClassesTest()
        {
            // TODO unit test for the property 'ClassificationNClasses'
        }
        /// <summary>
        /// Test the property 'ClassificationPositiveClass'
        /// </summary>
        [Test]
        public void ClassificationPositiveClassTest()
        {
            // TODO unit test for the property 'ClassificationPositiveClass'
        }
        /// <summary>
        /// Test the property 'ComputeClassificationMetrics'
        /// </summary>
        [Test]
        public void ComputeClassificationMetricsTest()
        {
            // TODO unit test for the property 'ComputeClassificationMetrics'
        }
        /// <summary>
        /// Test the property 'LearningRateMultiplier'
        /// </summary>
        [Test]
        public void LearningRateMultiplierTest()
        {
            // TODO unit test for the property 'LearningRateMultiplier'
        }
        /// <summary>
        /// Test the property 'NEpochs'
        /// </summary>
        [Test]
        public void NEpochsTest()
        {
            // TODO unit test for the property 'NEpochs'
        }
        /// <summary>
        /// Test the property 'PromptLossWeight'
        /// </summary>
        [Test]
        public void PromptLossWeightTest()
        {
            // TODO unit test for the property 'PromptLossWeight'
        }

    }

}
