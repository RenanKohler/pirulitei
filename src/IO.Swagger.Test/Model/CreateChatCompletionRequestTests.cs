/* 
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CreateChatCompletionRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CreateChatCompletionRequestTests
    {
        // TODO uncomment below to declare an instance variable for CreateChatCompletionRequest
        //private CreateChatCompletionRequest instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CreateChatCompletionRequest
            //instance = new CreateChatCompletionRequest();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CreateChatCompletionRequest
        /// </summary>
        [Test]
        public void CreateChatCompletionRequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CreateChatCompletionRequest
            //Assert.IsInstanceOfType<CreateChatCompletionRequest> (instance, "variable 'instance' is a CreateChatCompletionRequest");
        }


        /// <summary>
        /// Test the property 'Messages'
        /// </summary>
        [Test]
        public void MessagesTest()
        {
            // TODO unit test for the property 'Messages'
        }
        /// <summary>
        /// Test the property 'Model'
        /// </summary>
        [Test]
        public void ModelTest()
        {
            // TODO unit test for the property 'Model'
        }
        /// <summary>
        /// Test the property 'FrequencyPenalty'
        /// </summary>
        [Test]
        public void FrequencyPenaltyTest()
        {
            // TODO unit test for the property 'FrequencyPenalty'
        }
        /// <summary>
        /// Test the property 'LogitBias'
        /// </summary>
        [Test]
        public void LogitBiasTest()
        {
            // TODO unit test for the property 'LogitBias'
        }
        /// <summary>
        /// Test the property 'MaxTokens'
        /// </summary>
        [Test]
        public void MaxTokensTest()
        {
            // TODO unit test for the property 'MaxTokens'
        }
        /// <summary>
        /// Test the property 'N'
        /// </summary>
        [Test]
        public void NTest()
        {
            // TODO unit test for the property 'N'
        }
        /// <summary>
        /// Test the property 'PresencePenalty'
        /// </summary>
        [Test]
        public void PresencePenaltyTest()
        {
            // TODO unit test for the property 'PresencePenalty'
        }
        /// <summary>
        /// Test the property 'ResponseFormat'
        /// </summary>
        [Test]
        public void ResponseFormatTest()
        {
            // TODO unit test for the property 'ResponseFormat'
        }
        /// <summary>
        /// Test the property 'Seed'
        /// </summary>
        [Test]
        public void SeedTest()
        {
            // TODO unit test for the property 'Seed'
        }
        /// <summary>
        /// Test the property 'Stop'
        /// </summary>
        [Test]
        public void StopTest()
        {
            // TODO unit test for the property 'Stop'
        }
        /// <summary>
        /// Test the property 'Stream'
        /// </summary>
        [Test]
        public void StreamTest()
        {
            // TODO unit test for the property 'Stream'
        }
        /// <summary>
        /// Test the property 'Temperature'
        /// </summary>
        [Test]
        public void TemperatureTest()
        {
            // TODO unit test for the property 'Temperature'
        }
        /// <summary>
        /// Test the property 'TopP'
        /// </summary>
        [Test]
        public void TopPTest()
        {
            // TODO unit test for the property 'TopP'
        }
        /// <summary>
        /// Test the property 'Tools'
        /// </summary>
        [Test]
        public void ToolsTest()
        {
            // TODO unit test for the property 'Tools'
        }
        /// <summary>
        /// Test the property 'ToolChoice'
        /// </summary>
        [Test]
        public void ToolChoiceTest()
        {
            // TODO unit test for the property 'ToolChoice'
        }
        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Test]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
        /// <summary>
        /// Test the property 'FunctionCall'
        /// </summary>
        [Test]
        public void FunctionCallTest()
        {
            // TODO unit test for the property 'FunctionCall'
        }
        /// <summary>
        /// Test the property 'Functions'
        /// </summary>
        [Test]
        public void FunctionsTest()
        {
            // TODO unit test for the property 'Functions'
        }

    }

}
