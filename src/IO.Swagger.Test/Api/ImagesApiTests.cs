/* 
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ImagesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ImagesApiTests
    {
        private ImagesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ImagesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ImagesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ImagesApi
            //Assert.IsInstanceOfType(typeof(ImagesApi), instance, "instance is a ImagesApi");
        }

        /// <summary>
        /// Test CreateImage
        /// </summary>
        [Test]
        public void CreateImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateImageRequest body = null;
            //var response = instance.CreateImage(body);
            //Assert.IsInstanceOf<ImagesResponse> (response, "response is ImagesResponse");
        }
        /// <summary>
        /// Test CreateImageEdit
        /// </summary>
        [Test]
        public void CreateImageEditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //byte[] image = null;
            //string prompt = null;
            //byte[] mask = null;
            //Object model = null;
            //int? n = null;
            //string size = null;
            //string responseFormat = null;
            //string user = null;
            //var response = instance.CreateImageEdit(image, prompt, mask, model, n, size, responseFormat, user);
            //Assert.IsInstanceOf<ImagesResponse> (response, "response is ImagesResponse");
        }
        /// <summary>
        /// Test CreateImageVariation
        /// </summary>
        [Test]
        public void CreateImageVariationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //byte[] image = null;
            //Object model = null;
            //int? n = null;
            //string responseFormat = null;
            //string size = null;
            //string user = null;
            //var response = instance.CreateImageVariation(image, model, n, responseFormat, size, user);
            //Assert.IsInstanceOf<ImagesResponse> (response, "response is ImagesResponse");
        }
    }

}
